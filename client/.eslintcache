[{"/Users/kevinle/Documents/GitHub/devlink/client/src/App.js":"1","/Users/kevinle/Documents/GitHub/devlink/client/src/index.js":"2","/Users/kevinle/Documents/GitHub/devlink/client/src/reportWebVitals.js":"3","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Header.jsx":"4","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/RightMenu.jsx":"5","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/LeftMenu.jsx":"6","/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/register.jsx":"7","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Footer.jsx":"8","/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/Register.jsx":"9","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Home.jsx":"10","/Users/kevinle/Documents/GitHub/devlink/client/src/store/store.js":"11","/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/index.js":"12","/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/authReducer.js":"13","/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/Login.jsx":"14","/Users/kevinle/Documents/GitHub/devlink/client/src/actions/actionTypes.js":"15","/Users/kevinle/Documents/GitHub/devlink/client/src/actions/authAction.js":"16","/Users/kevinle/Documents/GitHub/devlink/client/src/utils/util.js":"17","/Users/kevinle/Documents/GitHub/devlink/client/src/utils/isEmpty_valid.js":"18","/Users/kevinle/Documents/GitHub/devlink/client/src/utils/setAuthToken.js":"19","/Users/kevinle/Documents/GitHub/devlink/client/src/actions/loadingAction.js":"20","/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/errorsReducer.js":"21","/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/profileReducer.js":"22","/Users/kevinle/Documents/GitHub/devlink/client/src/components/dashboard/Dashboard.jsx":"23","/Users/kevinle/Documents/GitHub/devlink/client/src/actions/profileAction.js":"24","/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddProfile.jsx":"25","/Users/kevinle/Documents/GitHub/devlink/client/src/auth/PrivateRoute.js":"26","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/IconSkillList.jsx":"27","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/DynamicIconComp.jsx":"28","/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/loadingReducer.js":"29","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/SkillCategory.jsx":"30","/Users/kevinle/Documents/GitHub/devlink/client/src/auth/AuthProvider.js":"31","/Users/kevinle/Documents/GitHub/devlink/client/src/components/dashboard/Resume.jsx":"32","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeIntro.jsx":"33","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeSkills.jsx":"34","/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddProject.jsx":"35","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeHeader.jsx":"36","/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddEducation.jsx":"37","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeExp.jsx":"38","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeSocial.jsx":"39"},{"size":3828,"mtime":1611018352557,"results":"40","hashOfConfig":"41"},{"size":622,"mtime":1609484955958,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1608892451739,"results":"43","hashOfConfig":"41"},{"size":1195,"mtime":1609296186561,"results":"44","hashOfConfig":"41"},{"size":2384,"mtime":1610702291126,"results":"45","hashOfConfig":"41"},{"size":1506,"mtime":1610528134907,"results":"46","hashOfConfig":"47"},{"size":4447,"mtime":1608968888986,"results":"48","hashOfConfig":"41"},{"size":1517,"mtime":1611048431702,"results":"49","hashOfConfig":"41"},{"size":7100,"mtime":1609472869642,"results":"50","hashOfConfig":"41"},{"size":1463,"mtime":1611051293231,"results":"51","hashOfConfig":"41"},{"size":370,"mtime":1609022831584,"results":"52","hashOfConfig":"41"},{"size":357,"mtime":1609319640380,"results":"53","hashOfConfig":"41"},{"size":636,"mtime":1610439522050,"results":"54","hashOfConfig":"41"},{"size":4949,"mtime":1610699526782,"results":"55","hashOfConfig":"41"},{"size":650,"mtime":1610961837574,"results":"56","hashOfConfig":"41"},{"size":2632,"mtime":1610702258183,"results":"57","hashOfConfig":"41"},{"size":3777,"mtime":1610960333536,"results":"58","hashOfConfig":"41"},{"size":251,"mtime":1609204542823,"results":"59","hashOfConfig":"41"},{"size":313,"mtime":1609161519438,"results":"60","hashOfConfig":"47"},{"size":331,"mtime":1610432823260,"results":"61","hashOfConfig":"41"},{"size":335,"mtime":1609449870515,"results":"62","hashOfConfig":"41"},{"size":817,"mtime":1610962029580,"results":"63","hashOfConfig":"41"},{"size":5874,"mtime":1611020640141,"results":"64","hashOfConfig":"41"},{"size":2261,"mtime":1610963679997,"results":"65","hashOfConfig":"41"},{"size":9456,"mtime":1610962482918,"results":"66","hashOfConfig":"41"},{"size":574,"mtime":1610428907872,"results":"67","hashOfConfig":"41"},{"size":8997,"mtime":1610234395042,"results":"68","hashOfConfig":"41"},{"size":3049,"mtime":1610236380188,"results":"69","hashOfConfig":"41"},{"size":523,"mtime":1610439207923,"results":"70","hashOfConfig":"41"},{"size":1814,"mtime":1609924501192,"results":"71","hashOfConfig":"41"},{"size":789,"mtime":1610154683936,"results":"72","hashOfConfig":"41"},{"size":2452,"mtime":1611046962173,"results":"73","hashOfConfig":"41"},{"size":778,"mtime":1611045159927,"results":"74","hashOfConfig":"41"},{"size":2408,"mtime":1611046646901,"results":"75","hashOfConfig":"41"},{"size":4644,"mtime":1611019629601,"results":"76","hashOfConfig":"41"},{"size":1763,"mtime":1611046286802,"results":"77","hashOfConfig":"41"},{"size":3995,"mtime":1611021076790,"results":"78","hashOfConfig":"41"},{"size":2408,"mtime":1611046855165,"results":"79","hashOfConfig":"41"},{"size":1143,"mtime":1611051051177,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},"7kajbs",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wvsij6",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"126"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevinle/Documents/GitHub/devlink/client/src/App.js",["177","178","179"],"import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { Layout, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { auth } from \"./actions/authAction\";\nimport { setLoadingAuth } from \"./actions/loadingAction\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./App.css\";\n\nimport HeaderLayout from \"./components/layouts/Header\";\nimport FooterLayout from \"./components/layouts/Footer\";\n\nimport PrivateRoute from \"./auth/PrivateRoute\";\n//import Home from \"./components/layouts/Home\";\nconst Home = lazy(() => import(\"./components/layouts/Home\"));\n//import Register from \"./components/auth/Register\";\nconst Register = lazy(() => import(\"./components/auth/Register\"));\n//import Login from \"./components/auth/Login\";\n\nconst Login = lazy(() => import(\"./components/auth/Login\"));\n\nconst Dashboard = lazy(() => import(\"./components/dashboard/Dashboard\"));\nconst AddProfile = lazy(() => import(\"./components/profile/AddProfile\"));\nconst AddProject = lazy(() => import(\"./components/profile/AddProject\"));\nconst AddEducation = lazy(() => import(\"./components/profile/AddEducation\"));\nconst Resume = lazy(() => import(\"./components/dashboard/Resume\"));\n\nconst spinIcon = <LoadingOutlined style={{ fontSize: 30 }} spin />;\n\nconst { Content } = Layout;\n\nfunction App() {\n  //const history = useHistory();\n  const { isAuthenticated } = useSelector(state => state.auth);\n\n  const dispatch = useDispatch();\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true);\n  const { loadingAuth } = useSelector(state => state.loading);\n\n  //check current user and set current user data\n  useEffect(() => {\n    document.title = \"DevLink\";\n    dispatch(auth());\n  }, []);\n\n  useEffect(() => {\n    setIsLoadingAuth(loadingAuth);\n  }, [loadingAuth]);\n\n  let homeContent;\n\n  if (isLoadingAuth) {\n    homeContent = (\n      <Spin className=\"lazyContent\" tip=\"Loading...\" indicator={spinIcon} />\n    );\n  } else {\n    homeContent = (\n      <>\n        <Content style={{ padding: \"0 60px\" }}>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/dashboard\"\n              component={Dashboard}\n              isAuthenticated={isAuthenticated}\n            />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/add-profile\"\n              component={AddProfile}\n              isAuthenticated={isAuthenticated}\n            />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/add-project\"\n              component={AddProject}\n              isAuthenticated={isAuthenticated}\n            />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/resume\"\n              component={Resume}\n              isAuthenticated={isAuthenticated}\n            />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/add-edu\"\n              component={AddEducation}\n              isAuthenticated={isAuthenticated}\n            />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n\n  return (\n    <Router>\n      <Layout className=\"layout\">\n        <Suspense\n          fallback={\n            <Spin\n              className=\"lazyContent\"\n              tip=\"Loading...\"\n              indicator={spinIcon}\n            />\n          }\n        >\n          <HeaderLayout />\n          {homeContent}\n          <FooterLayout />\n        </Suspense>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n",["180","181"],"/Users/kevinle/Documents/GitHub/devlink/client/src/index.js",[],["182","183"],"/Users/kevinle/Documents/GitHub/devlink/client/src/reportWebVitals.js",[],["184","185"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Header.jsx",["186"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LeftMenu from \"./LeftMenu\";\nimport RightMenu from \"./RightMenu\";\nimport { Button, Drawer } from \"antd\";\nimport logo from \"../../img/looper.png\";\n\nconst HeaderLayout = () => {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <nav className=\"menuBar\">\n      <div className=\"logo\">\n        <Link to=\"/\">\n          <img src={logo}></img>\n          <span className=\"title\">DevLink</span>\n        </Link>\n      </div>\n      <div className=\"menuCon\">\n        <div className=\"leftMenu\">\n          <LeftMenu />\n        </div>\n        <div className=\"rightMenu\">\n          <RightMenu />\n        </div>\n        <Button\n          className=\"barsMenu\"\n          type=\"primary\"\n          onClick={() => setVisible(true)}\n        >\n          <span className=\"barsBtn\"></span>\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          closable={false}\n          onClose={() => setVisible(false)}\n          visible={visible}\n        >\n          <LeftMenu />\n          <RightMenu />\n        </Drawer>\n      </div>\n    </nav>\n  );\n};\n\nexport default HeaderLayout;\n","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/RightMenu.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/LeftMenu.jsx",["187","188","189","190","191"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/register.jsx",["192"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Footer.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/Register.jsx",["193","194"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { validateStatus, domains } from \"../../utils/util\";\nimport { registerUser, clearErrors } from \"../../actions/authAction\";\nimport {\n  Form,\n  Input,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Row,\n  Col,\n  Typography,\n  Divider\n} from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 18\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 6\n    }\n  }\n};\n\nconst Register = () => {\n  const { Title } = Typography;\n  const [form] = Form.useForm();\n  const [errorStatus, setErrorStatus] = useState(false);\n  const [cleanErrors, setCleanErrors] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  //get errors from backend by redux store\n  const errors = useSelector(state => state.errors);\n  const { loadingStatus } = useSelector(state => state.loading);\n\n  //clear errors from redux store\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, []);\n\n  useEffect(() => {\n    //set errors message from backend\n    setCleanErrors({ ...errors });\n  }, [errors]);\n\n  const onFinish = registerData => {\n    //console.log(\"Received values of form: \", registerData);\n\n    //dispatch a action\n    dispatch(registerUser(registerData, history));\n    //set error status to display errors from backend\n    setErrorStatus(true);\n  };\n\n  //removing error alert from backend when input has been on change\n  const onInputChange = (value, type) => {\n    if (value) {\n      //hide error message for antd form\n      cleanErrors[type] = undefined;\n      setCleanErrors({ ...cleanErrors });\n    }\n  };\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onEmailChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(domains.map(domain => `${value}${\"@\" + domain}`));\n    }\n  };\n\n  const emailOptions = autoCompleteResult.map(email => ({\n    label: email,\n    value: email\n  }));\n  return (\n    <Row>\n      <Col span={16} offset={4}>\n        <Divider></Divider>\n        <Col span={16} offset={6}>\n          <Title level={3}>Register</Title>\n        </Col>\n\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onFinish}\n          initialValues={{\n            prefix: \"86\"\n          }}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"first_name\"\n            label={<span>First Name&nbsp;</span>}\n            {...validateStatus(cleanErrors.first_name, errorStatus)}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your first name!\",\n                whitespace: true\n              },\n              {\n                min: 2,\n                message: \"First Name must be at least 2 characters\"\n              },\n              {\n                max: 30,\n                message: \"First Name cannot be longer than 30 characters\"\n              }\n            ]}\n          >\n            <Input onChange={value => onInputChange(value, \"first_name\")} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"last_name\"\n            label={<span>Last Name&nbsp;</span>}\n            {...validateStatus(cleanErrors.last_name, errorStatus)}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your last name!\",\n                whitespace: true\n              },\n              {\n                min: 2,\n                message: \"Last Name must be at least 2 characters\"\n              },\n              {\n                max: 30,\n                message: \"Last Name cannot be longer than 30 characters\"\n              }\n            ]}\n          >\n            <Input onChange={value => onInputChange(value, \"last_name\")} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            label=\"E-mail\"\n            {...validateStatus(cleanErrors.email, errorStatus)}\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]}\n          >\n            <AutoComplete options={emailOptions} onChange={onEmailChange}>\n              <Input onChange={value => onInputChange(value, \"email\")} />\n            </AutoComplete>\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            {...validateStatus(cleanErrors.password, errorStatus)}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                min: 6,\n                message: \"Password must be at least 6 characters\"\n              },\n              {\n                max: 30,\n                message: \"Password cannot be longer than 30 characters\"\n              }\n            ]}\n            hasFeedback\n          >\n            <Input.Password\n              onChange={value => onInputChange(value, \"password\")}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm_password\"\n            label=\"Confirm Password\"\n            dependencies={[\"password\"]}\n            {...validateStatus(cleanErrors.confirm_password, errorStatus)}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    \"The two passwords that you entered do not match!\"\n                  );\n                }\n              })\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value\n                    ? Promise.resolve()\n                    : Promise.reject(\"Should accept agreement\")\n              }\n            ]}\n            {...tailFormItemLayout}\n          >\n            <Checkbox>\n              I have read the <a href=\"\">agreement</a>\n            </Checkbox>\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" loading={loadingStatus} htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n        <Divider></Divider>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Register;\n","/Users/kevinle/Documents/GitHub/devlink/client/src/components/layouts/Home.jsx",["195","196"],"/Users/kevinle/Documents/GitHub/devlink/client/src/store/store.js",[],["197","198"],"/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/index.js",[],["199","200"],"/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/authReducer.js",["201","202"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/auth/Login.jsx",["203","204","205"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  Divider,\n  Typography,\n  AutoComplete,\n  Alert\n} from \"antd\";\nimport Animate from \"rc-animate\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nimport { validateStatus, domains } from \"../../utils/util\";\nimport { login, clearErrors } from \"../../actions/authAction\";\n\nconst Login = () => {\n  const { Title } = Typography;\n\n  const [errorStatus, setErrorStatus] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  //get errors from backend by redux store\n  const errors = useSelector(state => state.errors);\n  const auth = useSelector(state => state.auth);\n  const [cleanErrors, setCleanErrors] = useState({});\n  //get loading status\n  const { loadingStatus } = useSelector(state => state.loading);\n\n  //clear errors from redux store\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, []);\n\n  useEffect(() => {\n    setCleanErrors({ ...errors });\n    //check if user already logged\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    } else {\n      history.push(\"/login\");\n    }\n  }, [auth, errors]);\n\n  const onFinish = userData => {\n    //dispatch to login\n    dispatch(login(userData));\n    //set error status to display errors if input is invalid\n    setErrorStatus(true);\n  };\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onEmailChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(domains.map(domain => `${value}${\"@\" + domain}`));\n    }\n  };\n\n  const emailOptions = autoCompleteResult.map(email => ({\n    label: email,\n    value: email\n  }));\n\n  //removing error alert from backend when input has been on change\n  const onInputChange = (value, type) => {\n    if (value) {\n      //hide error message for antd form\n      cleanErrors[type] = undefined;\n      setCleanErrors({ ...cleanErrors });\n      if (errors.loginFailed) {\n        errors.loginFailed = undefined;\n      }\n    }\n  };\n\n  return (\n    <Row>\n      <Col span={8} offset={8}>\n        <Divider>\n          <Title level={3}>Log In</Title>\n        </Divider>\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            hasFeedback\n            //for displaying errors from backend\n            {...validateStatus(cleanErrors.email, errorStatus)}\n            //validateStatus={errors.email && errorStatus ? \"error\" : \"\"}\n            //help={errorStatus ? errors.email : \"\"}\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your email!\"\n              }\n            ]}\n          >\n            <AutoComplete options={emailOptions} onChange={onEmailChange}>\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"email\"\n                onChange={value => onInputChange(value, \"email\")}\n              />\n            </AutoComplete>\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            hasFeedback\n            //for displaying errors from backend\n            {...validateStatus(cleanErrors.password, errorStatus)}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\"\n              }\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={value => onInputChange(value, \"password\")}\n            />\n          </Form.Item>\n          <Animate transitionName=\"fade\" transitionAppear>\n            {errors.loginFailed && (\n              <Alert message={errors.loginFailed} type=\"error\" showIcon />\n            )}\n          </Animate>\n          <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              loading={loadingStatus}\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>{\" \"}\n            Or <Link to=\"/register\">register now!</Link>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","/Users/kevinle/Documents/GitHub/devlink/client/src/actions/actionTypes.js",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/actions/authAction.js",["206"],"import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  CLEAR_ERRORS,\n  REQUEST_LOADING_AUTH\n} from \"./actionTypes\";\nimport { setLoading, setLoadingAuth } from \"./loadingAction\";\nimport jwt_decode from \"jwt-decode\";\n\n//register an account\nexport const registerUser = (registerData, history) => dispatch => {\n  dispatch(setLoading(true));\n  axios\n    .post(\"/api/users/register\", registerData)\n    .then(res => {\n      console.log(res.data);\n      history.push(\"/login\");\n    })\n    .catch(err => {\n      setTimeout(() => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        dispatch(setLoading(false));\n      }, 300);\n    });\n};\n\n//login\nexport const login = userData => dispatch => {\n  dispatch(setLoading(true));\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      //decode token to get user data\n      const user = jwt_decode(token);\n\n      //set current user\n      dispatch(setCurrentUser(user));\n      dispatch(setLoading(false));\n    })\n    .catch(err => {\n      console.log(\"login err\", err);\n\n      setTimeout(() => {\n        //set loading\n        dispatch(setLoading(false));\n\n        //send data to reducer\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      }, 300);\n    });\n};\n\n//set logged in user\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  };\n};\n\nexport const auth = () => dispatch => {\n  //dispatch(setLoadingAuth(true));\n  axios\n    .get(\"/api/users/currentUser\")\n    .then(res => {\n      console.log(\"current user\", res.data);\n      if (!res.data.isLoggedOut || res.data.isLoggedOut === undefined) {\n        //set current user data\n        dispatch(setLoadingAuth(false));\n        dispatch(setCurrentUser(res.data));\n      } else {\n        dispatch(setLoadingAuth(false));\n        window.location.href = \"/login\";\n      }\n    })\n    .catch(err => {\n      //console.log(\"check auth err\", err);\n      dispatch(setLoadingAuth(false));\n      dispatch(setCurrentUser({}));\n    });\n};\n\n// export const setLoadingAuth = () => {\n//   return {\n//     type: REQUEST_LOADING_AUTH\n//   };\n// };\n\nexport const logout = () => dispatch => {\n  //call API to remove token in cookie\n  axios.get(\"api/users/logout\").then(res => {\n    console.log(res.data);\n    dispatch(setLoading(false));\n\n    // set current user to empty data\n    dispatch(setCurrentUser({}));\n  });\n};\n\nexport const clearErrors = () => dispatch => {\n  //call API to remove token in cookie\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\n",["207","208"],"/Users/kevinle/Documents/GitHub/devlink/client/src/utils/util.js",[],["209","210"],"/Users/kevinle/Documents/GitHub/devlink/client/src/utils/isEmpty_valid.js",[],["211","212"],"/Users/kevinle/Documents/GitHub/devlink/client/src/utils/setAuthToken.js",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/actions/loadingAction.js",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/errorsReducer.js",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/profileReducer.js",["213"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/dashboard/Dashboard.jsx",["214"],"/Users/kevinle/Documents/GitHub/devlink/client/src/actions/profileAction.js",["215","216","217"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddProfile.jsx",["218","219","220","221"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { validateStatus } from \"../../utils/util\";\nimport { addProfile, clearErrors } from \"../../actions/profileAction\";\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Divider,\n  PageHeader,\n  Select,\n  BackTop,\n  Tag,\n  Space\n} from \"antd\";\nimport {\n  PlusCircleOutlined,\n  CloseCircleOutlined,\n  TwitterOutlined,\n  FacebookOutlined,\n  LinkedinOutlined,\n  InstagramOutlined,\n  YoutubeOutlined\n} from \"@ant-design/icons\";\nimport IconSkillItems from \"../common/IconSkillList\";\nconst { Title, Paragraph, Text } = Typography;\n\nconst { Option } = Select;\n\nconst AddProfile = () => {\n  const history = useHistory();\n  const popFrameworkList = useState({});\n  const errors = useSelector(state => state.errors);\n  const { loadingStatus } = useSelector(state => state.loading);\n  const [showSocialOption, setShowSocialOption] = useState(false);\n  const [cleanErrors, setCleanErrors] = useState({});\n  const [errorStatus, setErrorStatus] = useState(false);\n\n  const dispatch = useDispatch();\n\n  //clear errors from redux store\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, []);\n\n  useEffect(() => {\n    setCleanErrors({ ...errors });\n  }, [errors]);\n\n  const layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 18 }\n  };\n\n  const validateMessages = {\n    required: \"${label} is required!\",\n    types: {\n      email: \"${label} is not a valid email!\"\n    }\n  };\n\n  const profileStatus = [\n    \"Developer\",\n    \"Junior Developer\",\n    \"Senior Developer\",\n    \"Manager\",\n    \"Student or Learning\",\n    \"Instructor or Teacher\",\n    \"Intern\",\n    \"Other\"\n  ];\n\n  const handleSubmitProfile = value => {\n    const skills = {\n      frameworks: getSkills(popFrameworkList[0].frameworks),\n      languages: getSkills(popFrameworkList[0].languages),\n      tools: getSkills(popFrameworkList[0].tools)\n    };\n    value.resume[\"skills\"] = skills;\n    console.log(\"all values\", value.resume);\n\n    //dispatch to add new resume\n    dispatch(addProfile(value.resume, history));\n    setErrorStatus(true);\n  };\n\n  const getSkills = skills => skills.filter(skill => skill.status === true);\n\n  //removing error alert from backend when input has been on change\n  const onInputChange = (value, type) => {\n    if (value) {\n      //hide error message for antd form\n      cleanErrors[type] = undefined;\n      setCleanErrors({ ...cleanErrors });\n      if (errors.loginFailed) {\n        errors.loginFailed = undefined;\n      }\n    }\n  };\n\n  return (\n    <Row>\n      <BackTop />\n      <Col span={16} offset={4}>\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => {\n            history.push(\"/dashboard\");\n          }}\n          title=\"Dashboard\"\n        />\n        <Typography style={{ textAlign: \"center\" }}>\n          <Title level={3}>Create A New Resume</Title>\n          <Text>\n            Get a Job-Winning Resume Template for Free! Stop Struggling with\n            Word.\n          </Text>\n        </Typography>\n        <Divider />\n        <Form\n          {...layout}\n          name=\"nest-messages\"\n          onFinish={handleSubmitProfile}\n          validateMessages={validateMessages}\n        >\n          <Form.Item\n            name={[\"resume\", \"handle\"]}\n            label=\"Resume name\"\n            extra=\"A unique handle for resume URL, your full name, your company ect...(this CANNOT be changed later).\"\n            {...validateStatus(cleanErrors.handle, errorStatus)}\n            rules={[{ required: true }]}\n          >\n            <Input onChange={value => onInputChange(value, \"handle\")} />\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"status\"]}\n            label=\"Status\"\n            extra=\"Give us an idea of where you are in at career.\"\n            {...validateStatus(cleanErrors.status, errorStatus)}\n            rules={[\n              {\n                required: true\n              }\n            ]}\n          >\n            <Select\n              placeholder=\"Select professional status\"\n              onChange={value => console.log(value)}\n              allowClear\n            >\n              {profileStatus.map(item => (\n                <Option key={item} value={item}>\n                  {item}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"position\"]}\n            label=\"Job title\"\n            extra=\"Which position are you in? frontend, backend or fullstack web developer...\"\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"company\"]}\n            label=\"Company\"\n            extra=\"Could be your own country or where you work for.\"\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"website\"]}\n            label=\"Website\"\n            extra=\"Your website or company website.\"\n            {...validateStatus(cleanErrors.website, errorStatus)}\n          >\n            <Input onChange={value => onInputChange(value, \"website\")} />\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"github\"]}\n            label=\"Your Github\"\n            extra=\"Show your repos\"\n            {...validateStatus(cleanErrors.github, errorStatus)}\n          >\n            <Input onChange={value => onInputChange(value, \"github\")} />\n          </Form.Item>\n          <Form.Item\n            name={[\"resume\", \"city\"]}\n            label=\"City\"\n            extra=\"City & State suggested (Ex. San Diego, CA) \"\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item name={[\"resume\", \"bio\"]} label=\"Introduction\">\n            <Input.TextArea\n              placeholder=\"Bio...\"\n              extra=\"Tell us about yourself\"\n            />\n          </Form.Item>\n          <Divider orientation=\"left\">\n            <Title level={4}>Skills:</Title>\n          </Divider>\n          <IconSkillItems popSkills={popFrameworkList} />\n          <Row>\n            <Col offset={4}>\n              <Space>\n                {!showSocialOption ? (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"showSkills\"\n                    icon={<PlusCircleOutlined />}\n                    onClick={() => setShowSocialOption(true)}\n                  >\n                    Add Socials Link\n                  </Button>\n                ) : (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"showSkills\"\n                    icon={<CloseCircleOutlined />}\n                    onClick={() => setShowSocialOption(false)}\n                  >\n                    Clear Socials Link\n                  </Button>\n                )}\n\n                <Tag>Option</Tag>\n              </Space>\n              <Divider />\n            </Col>\n          </Row>\n          {showSocialOption && (\n            <Col offset={4}>\n              <Form.Item\n                name={[\"resume\", \"twitter\"]}\n                {...validateStatus(cleanErrors.twitter, errorStatus)}\n              >\n                <Input\n                  placeholder=\"Twitter profile URL\"\n                  prefix={<TwitterOutlined />}\n                  onChange={value => onInputChange(value, \"twitter\")}\n                />\n              </Form.Item>\n              <Form.Item\n                name={[\"resume\", \"facebook\"]}\n                {...validateStatus(cleanErrors.facebook, errorStatus)}\n              >\n                <Input\n                  placeholder=\"facebook profile URL\"\n                  prefix={<FacebookOutlined />}\n                  onChange={value => onInputChange(value, \"facebook\")}\n                />\n              </Form.Item>\n              <Form.Item\n                name={[\"resume\", \"linkedin\"]}\n                {...validateStatus(cleanErrors.linkedin, errorStatus)}\n              >\n                <Input\n                  placeholder=\"Linkedin profile URL\"\n                  prefix={<LinkedinOutlined />}\n                  onChange={value => onInputChange(value, \"linkedin\")}\n                />\n              </Form.Item>\n              <Form.Item\n                name={[\"resume\", \"instagram\"]}\n                {...validateStatus(cleanErrors.instagram, errorStatus)}\n              >\n                <Input\n                  placeholder=\"Instagram profile URL\"\n                  prefix={<InstagramOutlined />}\n                  onChange={value => onInputChange(value, \"instagram\")}\n                />\n              </Form.Item>\n              <Form.Item\n                name={[\"resume\", \"Youtube\"]}\n                prefix={<YoutubeOutlined />}\n                {...validateStatus(cleanErrors.youtube, errorStatus)}\n                onChange={value => onInputChange(value, \"youtube\")}\n              >\n                <Input\n                  placeholder=\"Youtube profile URL\"\n                  prefix={<TwitterOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          )}\n\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={loadingStatus}\n              block\n            >\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default React.memo(AddProfile);\n","/Users/kevinle/Documents/GitHub/devlink/client/src/auth/PrivateRoute.js",["222","223"],"import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: RouteComponent,\n  isAuthenticated,\n  ...rest\n}) => {\n  //const [isAuthenticated, setIsAuthenticated] = useState(null);\n  //let isAuthenticated = localStorage.getItem(\"isLoggedIn\");\n\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        isAuthenticated ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/IconSkillList.jsx",["224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\nimport { BehaviorSubject, of, merge, Subject } from \"rxjs\";\nimport {\n  debounceTime,\n  tap,\n  delay,\n  map,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  catchError\n} from \"rxjs/operators\";\nimport {\n  Typography,\n  Divider,\n  Button,\n  Space,\n  Row,\n  Col,\n  message,\n  Modal,\n  Slider,\n  Input,\n  Select\n} from \"antd\";\nimport {\n  popularFrameworks,\n  popularLanguages,\n  popularTools\n} from \"../../utils/util\";\nimport isEmpty from \"../../utils/isEmpty_valid\";\nimport SkillCategory from \"./SkillCategory\";\nimport { CloseSquareOutlined } from \"@ant-design/icons\";\nconst { Title, Text } = Typography;\n\nconst IconSkillList = props => {\n  const { popSkills } = props;\n\n  const initSearch = {\n    frameworks: {},\n    languages: {},\n    tools: {}\n  };\n\n  //const [loadingSearch, setLoadingSearch] = useState(initSearch);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [titleModal, setTitleModal] = useState();\n  const [selectSkill, setSelectSkill] = useState({});\n  const [level, setLevel] = useState();\n  const [subject, setSubject] = useState(null);\n  const [popFrameworkList, setPopFrameworkList] = popSkills;\n  const [isSearching, setIsSearching] = useState(false);\n  const [resultSearch, setResultSearch] = useState(initSearch);\n  const levelDefault = 20;\n\n  useEffect(() => {\n    //initial list of skills\n    initSkills(levelDefault);\n  }, []);\n\n  useEffect(() => {\n    if (subject === null) {\n      const sub = new BehaviorSubject(\"\");\n      setSubject(sub);\n    } else {\n      const frameworks = doSearch(\n        skillsFilter,\n        popFrameworkList[\"frameworks\"]\n      ).subscribe(result => {\n        //console.log(\"frameworks\", result);\n        //setLoadingSearch(s => Object.assign({}, s, result));\n        resultSearch.frameworks = result;\n        setResultSearch({ ...resultSearch });\n      });\n      const languages = doSearch(\n        skillsFilter,\n        popFrameworkList[\"languages\"]\n      ).subscribe(result => {\n        resultSearch.languages = result;\n        setResultSearch({ ...resultSearch });\n      });\n      const tools = doSearch(skillsFilter, popFrameworkList[\"tools\"]).subscribe(\n        result => {\n          resultSearch.tools = result;\n          setResultSearch({ ...resultSearch });\n        }\n      );\n\n      return () => {\n        frameworks.unsubscribe();\n        languages.unsubscribe();\n        tools.unsubscribe();\n        subject.unsubscribe();\n      };\n    }\n  }, [subject]);\n\n  const initSkills = levelDefault => {\n    let initSkills = {\n      frameworks: [],\n      languages: [],\n      tools: []\n    };\n    for (const item of popularFrameworks) {\n      initSkills[\"frameworks\"].push({\n        title: item,\n        level: levelDefault,\n        status: false\n      });\n    }\n    for (const item of popularLanguages) {\n      initSkills[\"languages\"].push({\n        title: item,\n        level: levelDefault,\n        status: false\n      });\n    }\n    for (const item of popularTools) {\n      initSkills[\"tools\"].push({\n        title: item,\n        status: false\n      });\n    }\n    setPopFrameworkList(initSkills);\n  };\n\n  const doSearch = (search, skills) => {\n    return subject.pipe(\n      map(s => s.trim()),\n      distinctUntilChanged(),\n      filter(s => s.length >= 1),\n      debounceTime(200),\n      switchMap(query =>\n        merge(\n          of({ loading: true, errorMessage: \"\", noResults: false }),\n          of({\n            data: search(skills, query),\n            loading: false,\n            noResults: search(skills, query).length === 0\n          }).pipe(delay(1000))\n        )\n      ),\n      catchError(e => ({\n        loading: false,\n        errorMessage: \"An application error occurred\"\n      }))\n    );\n  };\n\n  //filling skill title by query\n  const skillsFilter = (skills, query) =>\n    skills.filter(skill =>\n      skill.title.toLowerCase().startsWith(query.toLowerCase())\n    );\n\n  const handleSearch = value => {\n    //do searching when value is not empty and length >= 1\n    if (!isEmpty(value) && value.length >= 1) {\n      setIsSearching(true);\n      if (subject) {\n        return subject.next(value);\n      }\n    }\n    //reset search to show all skills\n    else {\n      setResultSearch(initSearch);\n      setIsSearching(false);\n    }\n  };\n\n  //select item when modal showed up\n  const selectFrameworks = () => {\n    const { idx, cat } = selectSkill;\n\n    const skill = popFrameworkList[cat][idx];\n\n    setTitleModal(skill.title);\n    skill.status = true;\n    skill.level = level;\n    setPopFrameworkList({ ...popFrameworkList });\n    //message.info(\"Framework selected: \" + frameworks[name]);\n  };\n\n  const showModal = (idx, cat) => {\n    //reset default value for slider\n    setLevel(levelDefault);\n    const split = idx.split(\"-\");\n    //console.log(\"get idx and title skill: \" + isSearching, split);\n\n    const index = split[0];\n    if (isSearching) {\n      //is for searching\n      const findSkillIndex = handleSearchModal(split[1], cat);\n      if (findSkillIndex !== null) {\n        //console.log(\"check\", findSkillIndex);\n        const skill = popFrameworkList[cat][findSkillIndex.idx];\n        if (skill.status) {\n          //reset selected\n          handleResetSelected(skill);\n        } else {\n          if (cat !== \"tools\") {\n            setIsModalVisible(true);\n          } else {\n            skill.status = true;\n            skill.level = level;\n            setPopFrameworkList({ ...popFrameworkList });\n          }\n        }\n      } else {\n        message.info(\"No \" + split[1] + \" founds in \" + cat);\n      }\n    } else {\n      const skill = popFrameworkList[cat][index];\n      //set state for handleOk Modal\n      setSelectSkill({ idx: index, cat: cat });\n      if (!skill.status) {\n        if (cat !== \"tools\") {\n          //console.log(\"check cat: ->\", cat);\n\n          setTitleModal(skill.title);\n          setIsModalVisible(true);\n        } else {\n          // if category is tools, just selected item without setting level\n          skill.status = true;\n          skill.level = level;\n          setPopFrameworkList({ ...popFrameworkList });\n        }\n      } else {\n        //reset selected\n        handleResetSelected(skill);\n        //console.log(popFrameworkList);\n      }\n    }\n  };\n\n  const handleResetSelected = skill => {\n    skill.status = false;\n    skill.level = levelDefault;\n    setPopFrameworkList({ ...popFrameworkList });\n  };\n\n  const handleSearchModal = (title, cat) => {\n    for (let i = 0; i < popFrameworkList[cat].length; i++) {\n      const item = popFrameworkList[cat][i];\n      if (item.title === title) {\n        //console.log(item.title + \" -> \" + i);\n        const pos = { idx: i, cat: cat };\n        setSelectSkill(pos);\n        return pos;\n      }\n    }\n    return null;\n  };\n\n  const handleOk = () => {\n    //console.log(popFrameworkList);\n    selectFrameworks();\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleClear = () => {\n    setResultSearch(initSearch);\n    initSkills(levelDefault);\n    setIsSearching(false);\n  };\n\n  return (\n    <>\n      <Modal\n        title={titleModal}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        maskClosable={false}\n      >\n        <Title level={5}>Level:</Title>\n        <Slider value={level} onChange={value => setLevel(value)} />\n      </Modal>\n\n      <Row>\n        <Col offset={10}>\n          <Space>\n            <Button icon={<CloseSquareOutlined />} onClick={handleClear}>\n              Clear All\n            </Button>\n\n            <Input.Search\n              placeholder=\"enter input to search...\"\n              onChange={e => handleSearch(e.target.value)}\n              loading={resultSearch.frameworks.loading}\n              enterButton\n              allowClear={true}\n              onSearch={() => {\n                console.log(\"final result\", resultSearch);\n                console.log(\"final selected\", popFrameworkList);\n              }}\n            />\n          </Space>\n          <Divider />\n        </Col>\n      </Row>\n\n      <SkillCategory\n        popFrameworkList={\n          isSearching\n            ? resultSearch.frameworks.data\n            : popFrameworkList.frameworks\n        }\n        cat={\"frameworks\"}\n        title={\"Frameworks & Libraries:\"}\n        showModal={showModal}\n        searchResult={resultSearch.frameworks}\n      />\n\n      <SkillCategory\n        popFrameworkList={\n          isSearching ? resultSearch.languages.data : popFrameworkList.languages\n        }\n        cat={\"languages\"}\n        title={\"Languages:\"}\n        showModal={showModal}\n        searchResult={resultSearch.languages}\n      />\n      <SkillCategory\n        popFrameworkList={\n          isSearching ? resultSearch.tools.data : popFrameworkList.tools\n        }\n        cat={\"tools\"}\n        title={\"Tools & Services:\"}\n        showModal={showModal}\n        searchResult={resultSearch.tools}\n      />\n    </>\n  );\n};\n\nexport default IconSkillList;\n",["230","231"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/DynamicIconComp.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/reducers/loadingReducer.js",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/SkillCategory.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/auth/AuthProvider.js",["232","233"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/dashboard/Resume.jsx",["234","235","236","237","238","239","240","241","242","243","244","245"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeIntro.jsx",["246"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeSkills.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddProject.jsx",["247","248","249"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { validateStatus } from \"../../utils/util\";\nimport moment from \"moment\";\nimport { addProject, clearErrors } from \"../../actions/profileAction\";\nimport {\n  Form,\n  Input,\n  Row,\n  Col,\n  Button,\n  Divider,\n  Typography,\n  PageHeader,\n  DatePicker\n} from \"antd\";\nconst { Title } = Typography;\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 18 }\n};\nconst validateMessages = {\n  required: \"${label} is required!\"\n};\n\nconst AddProject = () => {\n  const errors = useSelector(state => state.errors);\n  const { loadingStatus } = useSelector(state => state.loading);\n  const history = useHistory();\n\n  const [cleanErrors, setCleanErrors] = useState({});\n  const [errorStatus, setErrorStatus] = useState(false);\n\n  const dispatch = useDispatch();\n\n  //clear errors from redux store\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, []);\n\n  useEffect(() => {\n    setCleanErrors({ ...errors });\n  }, [errors]);\n\n  const onFinish = values => {\n    //console.log(values);\n    //console.log(moment(values.from).valueOf());\n    const projectData = {\n      ...values.project,\n      from: moment(values.project.from).valueOf(),\n      to: values.project.to ? moment(values.project.to).valueOf() : undefined\n    };\n    console.log(\"projectData\", projectData);\n    dispatch(addProject(projectData, history));\n    setErrorStatus(true);\n  };\n\n  //removing error alert from backend when input has been on change\n  const onInputChange = (value, type) => {\n    if (value) {\n      //hide error message for antd form\n      cleanErrors[type] = undefined;\n      setCleanErrors({ ...cleanErrors });\n      if (errors.loginFailed) {\n        errors.loginFailed = undefined;\n      }\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col span={16} offset={4}>\n          <PageHeader\n            className=\"site-page-header\"\n            onBack={() => {\n              history.push(\"/dashboard\");\n            }}\n            title=\"Dashboard\"\n          />\n          <Typography style={{ textAlign: \"center\" }}>\n            <Title level={3}>Add New Project</Title>\n          </Typography>\n          <Form\n            {...layout}\n            name=\"nest-messages\"\n            onFinish={onFinish}\n            validateMessages={validateMessages}\n          >\n            <Form.Item\n              name={[\"project\", \"title\"]}\n              label=\"Title\"\n              {...validateStatus(cleanErrors.handle, errorStatus)}\n              onChange={value => onInputChange(value, \"title\")}\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name={[\"project\", \"feature\"]}\n              label=\"Feature\"\n              extra=\"give some features, technologies that you used in this project.\"\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name={[\"project\", \"from\"]}\n              label=\"From\"\n              {...validateStatus(cleanErrors.handle, errorStatus)}\n              onChange={value => onInputChange(value, \"from\")}\n              rules={[{ required: true }]}\n            >\n              <DatePicker />\n            </Form.Item>\n            <Form.Item\n              name={[\"project\", \"to\"]}\n              label=\"To\"\n              extra='Leave blank as \"to now\".'\n            >\n              <DatePicker />\n            </Form.Item>\n            <Form.Item\n              name={[\"project\", \"github_link\"]}\n              label=\"Github\"\n              {...validateStatus(cleanErrors.handle, errorStatus)}\n              onChange={value => onInputChange(value, \"github_link\")}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name={[\"project\", \"demo_link\"]}\n              label=\"Website Demo\"\n              {...validateStatus(cleanErrors.handle, errorStatus)}\n              onChange={value => onInputChange(value, \"demo_link\")}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name={[\"project\", \"description\"]} label=\"Description\">\n              <Input.TextArea />\n            </Form.Item>\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loadingStatus}\n                block\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default AddProject;\n","/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeHeader.jsx",[],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/profile/AddEducation.jsx",["250","251","252"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeExp.jsx",["253"],"/Users/kevinle/Documents/GitHub/devlink/client/src/components/common/resume-comp/ResumeSocial.jsx",["254","255","256","257"],{"ruleId":"258","severity":1,"message":"259","line":6,"column":3,"nodeType":"260","messageId":"261","endLine":6,"endColumn":11},{"ruleId":"258","severity":1,"message":"262","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":50,"column":6,"nodeType":"265","endLine":50,"endColumn":8,"suggestions":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"267","replacedBy":"271"},{"ruleId":"269","replacedBy":"272"},{"ruleId":"267","replacedBy":"273"},{"ruleId":"269","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":15,"column":11,"nodeType":"277","endLine":15,"endColumn":27},{"ruleId":"258","severity":1,"message":"278","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"279","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":34},{"ruleId":"258","severity":1,"message":"280","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":28,"column":13,"nodeType":"277","endLine":28,"endColumn":24},{"ruleId":"281","severity":1,"message":"282","line":41,"column":13,"nodeType":"277","endLine":41,"endColumn":24},{"ruleId":"281","severity":1,"message":"282","line":184,"column":31,"nodeType":"277","endLine":184,"endColumn":42},{"ruleId":"263","severity":1,"message":"264","line":64,"column":6,"nodeType":"265","endLine":64,"endColumn":8,"suggestions":"283"},{"ruleId":"281","severity":1,"message":"282","line":253,"column":31,"nodeType":"277","endLine":253,"endColumn":42},{"ruleId":"258","severity":1,"message":"284","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":18,"column":6,"nodeType":"265","endLine":18,"endColumn":8,"suggestions":"285"},{"ruleId":"267","replacedBy":"286"},{"ruleId":"269","replacedBy":"287"},{"ruleId":"267","replacedBy":"288"},{"ruleId":"269","replacedBy":"289"},{"ruleId":"258","severity":1,"message":"290","line":3,"column":3,"nodeType":"260","messageId":"261","endLine":3,"endColumn":21},{"ruleId":"258","severity":1,"message":"291","line":4,"column":3,"nodeType":"260","messageId":"261","endLine":4,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":39,"column":6,"nodeType":"265","endLine":39,"endColumn":8,"suggestions":"292"},{"ruleId":"263","severity":1,"message":"293","line":49,"column":6,"nodeType":"265","endLine":49,"endColumn":20,"suggestions":"294"},{"ruleId":"281","severity":1,"message":"282","line":155,"column":13,"nodeType":"277","endLine":155,"endColumn":54},{"ruleId":"258","severity":1,"message":"291","line":6,"column":3,"nodeType":"260","messageId":"261","endLine":6,"endColumn":23},{"ruleId":"267","replacedBy":"295"},{"ruleId":"269","replacedBy":"296"},{"ruleId":"267","replacedBy":"297"},{"ruleId":"269","replacedBy":"298"},{"ruleId":"267","replacedBy":"299"},{"ruleId":"269","replacedBy":"300"},{"ruleId":"258","severity":1,"message":"301","line":3,"column":3,"nodeType":"260","messageId":"261","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"264","line":128,"column":6,"nodeType":"265","endLine":128,"endColumn":8,"suggestions":"302"},{"ruleId":"258","severity":1,"message":"303","line":5,"column":3,"nodeType":"260","messageId":"261","endLine":5,"endColumn":14},{"ruleId":"258","severity":1,"message":"301","line":6,"column":3,"nodeType":"260","messageId":"261","endLine":6,"endColumn":15},{"ruleId":"258","severity":1,"message":"304","line":8,"column":3,"nodeType":"260","messageId":"261","endLine":8,"endColumn":20},{"ruleId":"258","severity":1,"message":"305","line":30,"column":16,"nodeType":"260","messageId":"261","endLine":30,"endColumn":25},{"ruleId":"263","severity":1,"message":"264","line":48,"column":6,"nodeType":"265","endLine":48,"endColumn":8,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":60,"column":15,"nodeType":"309","messageId":"310","endLine":60,"endColumn":38},{"ruleId":"307","severity":1,"message":"308","line":62,"column":14,"nodeType":"309","messageId":"310","endLine":62,"endColumn":46},{"ruleId":"258","severity":1,"message":"278","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"311","line":1,"column":28,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"312","line":2,"column":38,"nodeType":"260","messageId":"261","endLine":2,"endColumn":45},{"ruleId":"258","severity":1,"message":"313","line":5,"column":3,"nodeType":"260","messageId":"261","endLine":5,"endColumn":6},{"ruleId":"258","severity":1,"message":"314","line":24,"column":3,"nodeType":"260","messageId":"261","endLine":24,"endColumn":9},{"ruleId":"258","severity":1,"message":"315","line":34,"column":16,"nodeType":"260","messageId":"261","endLine":34,"endColumn":20},{"ruleId":"263","severity":1,"message":"316","line":60,"column":6,"nodeType":"265","endLine":60,"endColumn":8,"suggestions":"317"},{"ruleId":"263","severity":1,"message":"318","line":97,"column":6,"nodeType":"265","endLine":97,"endColumn":15,"suggestions":"319"},{"ruleId":"267","replacedBy":"320"},{"ruleId":"269","replacedBy":"321"},{"ruleId":"258","severity":1,"message":"322","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":15},{"ruleId":"258","severity":1,"message":"323","line":8,"column":9,"nodeType":"260","messageId":"261","endLine":8,"endColumn":21},{"ruleId":"258","severity":1,"message":"284","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"324","line":16,"column":3,"nodeType":"260","messageId":"261","endLine":16,"endColumn":6},{"ruleId":"258","severity":1,"message":"325","line":17,"column":3,"nodeType":"260","messageId":"261","endLine":17,"endColumn":11},{"ruleId":"258","severity":1,"message":"326","line":19,"column":3,"nodeType":"260","messageId":"261","endLine":19,"endColumn":11},{"ruleId":"258","severity":1,"message":"327","line":22,"column":3,"nodeType":"260","messageId":"261","endLine":22,"endColumn":18},{"ruleId":"258","severity":1,"message":"328","line":23,"column":3,"nodeType":"260","messageId":"261","endLine":23,"endColumn":19},{"ruleId":"258","severity":1,"message":"329","line":27,"column":3,"nodeType":"260","messageId":"261","endLine":27,"endColumn":21},{"ruleId":"258","severity":1,"message":"330","line":29,"column":8,"nodeType":"260","messageId":"261","endLine":29,"endColumn":23},{"ruleId":"258","severity":1,"message":"331","line":31,"column":9,"nodeType":"260","messageId":"261","endLine":31,"endColumn":14},{"ruleId":"258","severity":1,"message":"305","line":31,"column":16,"nodeType":"260","messageId":"261","endLine":31,"endColumn":25},{"ruleId":"258","severity":1,"message":"315","line":31,"column":27,"nodeType":"260","messageId":"261","endLine":31,"endColumn":31},{"ruleId":"263","severity":1,"message":"264","line":39,"column":6,"nodeType":"265","endLine":39,"endColumn":8,"suggestions":"332"},{"ruleId":"258","severity":1,"message":"333","line":2,"column":35,"nodeType":"260","messageId":"261","endLine":2,"endColumn":40},{"ruleId":"258","severity":1,"message":"334","line":13,"column":3,"nodeType":"260","messageId":"261","endLine":13,"endColumn":10},{"ruleId":"307","severity":1,"message":"308","line":24,"column":13,"nodeType":"309","messageId":"310","endLine":24,"endColumn":36},{"ruleId":"263","severity":1,"message":"264","line":40,"column":6,"nodeType":"265","endLine":40,"endColumn":8,"suggestions":"335"},{"ruleId":"258","severity":1,"message":"334","line":13,"column":3,"nodeType":"260","messageId":"261","endLine":13,"endColumn":10},{"ruleId":"307","severity":1,"message":"308","line":24,"column":13,"nodeType":"309","messageId":"310","endLine":24,"endColumn":36},{"ruleId":"263","severity":1,"message":"264","line":40,"column":6,"nodeType":"265","endLine":40,"endColumn":8,"suggestions":"336"},{"ruleId":"258","severity":1,"message":"337","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":24},{"ruleId":"258","severity":1,"message":"338","line":8,"column":10,"nodeType":"260","messageId":"261","endLine":8,"endColumn":24},{"ruleId":"258","severity":1,"message":"339","line":8,"column":26,"nodeType":"260","messageId":"261","endLine":8,"endColumn":41},{"ruleId":"258","severity":1,"message":"331","line":9,"column":9,"nodeType":"260","messageId":"261","endLine":9,"endColumn":14},{"ruleId":"258","severity":1,"message":"315","line":9,"column":16,"nodeType":"260","messageId":"261","endLine":9,"endColumn":20},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setLoadingAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["340"],"no-native-reassign",["341"],"no-negated-in-lhs",["342"],["341"],["342"],["341"],["342"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["343"],"'Link' is defined but never used.",["344"],["341"],["342"],["341"],["342"],"'CLEAR_CURRENT_USER' is defined but never used.","'REQUEST_LOADING_AUTH' is defined but never used.",["345"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["346"],["341"],["342"],["341"],["342"],["341"],["342"],"'GET_PROFILES' is defined but never used.",["347"],"'GET_PROJECT' is defined but never used.","'PROFILE_NOT_FOUND' is defined but never used.","'Paragraph' is assigned a value but never used.",["348"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useState' is defined but never used.","'Subject' is defined but never used.","'tap' is defined but never used.","'Select' is defined but never used.","'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initSkills'. Either include it or remove the dependency array.",["349"],"React Hook useEffect has missing dependencies: 'doSearch', 'popFrameworkList', and 'resultSearch'. Either include them or remove the dependency array. You can also do a functional update 'setResultSearch(r => ...)' if you only need 'resultSearch' in the 'setResultSearch' call.",["350"],["341"],["342"],"'isEmpty' is defined but never used.","'initialState' is assigned a value but never used.","'Tag' is defined but never used.","'Progress' is defined but never used.","'Timeline' is defined but never used.","'TwitterOutlined' is defined but never used.","'FacebookOutlined' is defined but never used.","'ExperimentOutlined' is defined but never used.","'DynamicIconComp' is defined but never used.","'Title' is assigned a value but never used.",["351"],"'Space' is defined but never used.","'Divider' is defined but never used.",["352"],["353"],"'GithubOutlined' is defined but never used.","'upperFirstChar' is defined but never used.","'upperCaseString' is defined but never used.",{"desc":"354","fix":"355"},"no-global-assign","no-unsafe-negation",{"desc":"354","fix":"356"},{"desc":"354","fix":"357"},{"desc":"354","fix":"358"},{"desc":"359","fix":"360"},{"desc":"354","fix":"361"},{"desc":"354","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"354","fix":"367"},{"desc":"354","fix":"368"},{"desc":"354","fix":"369"},"Update the dependencies array to be: [dispatch]",{"range":"370","text":"371"},{"range":"372","text":"371"},{"range":"373","text":"371"},{"range":"374","text":"371"},"Update the dependencies array to be: [auth, errors, history]",{"range":"375","text":"376"},{"range":"377","text":"371"},{"range":"378","text":"371"},"Update the dependencies array to be: [initSkills]",{"range":"379","text":"380"},"Update the dependencies array to be: [doSearch, popFrameworkList, resultSearch, subject]",{"range":"381","text":"382"},{"range":"383","text":"371"},{"range":"384","text":"371"},{"range":"385","text":"371"},[1802,1804],"[dispatch]",[1263,1265],[750,752],[1065,1067],[1281,1295],"[auth, errors, history]",[2814,2816],[1247,1249],[1420,1422],"[initSkills]",[2482,2491],"[doSearch, popFrameworkList, resultSearch, subject]",[1020,1022],[1005,1007],[1003,1005]]